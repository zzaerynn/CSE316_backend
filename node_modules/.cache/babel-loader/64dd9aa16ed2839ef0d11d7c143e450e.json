{"ast":null,"code":"var _jsxFileName = \"/Users/zzaerynn/Desktop/CSE316/hw2-hyerinchoi/src/Col.js\",\n    _s = $RefreshSig$();\n\nimport { React, Component, useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Note from './Note';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getNewID = notes => {\n  let res = -1;\n\n  for (let note in notes) {\n    if (notes[note].id > res) {\n      res = notes[note.id];\n    }\n  }\n\n  return res === -1 ? 0 : res + 1;\n};\n\nconst Col = ({\n  popup,\n  togglePopup\n}) => {\n  _s();\n\n  const [colVisible, setColVisible] = useState(true);\n  const [textarea, setTextarea] = useState(\"\");\n  const [noteState, setNoteState] = useState(localStorage.getItem(\"noteData\") === null ? {\n    notes: [],\n    selectedID: null,\n    newID: 0\n  } : {\n    notes: JSON.parse(window.localStorage.getItem(\"noteData\")),\n    selectedID: null,\n    newID: getNewID(JSON.parse(window.localStorage.getItem(\"noteData\")))\n  });\n  useEffect(() => {\n    window.localStorage.setItem(\"noteData\", JSON.stringify(noteState.notes));\n  });\n\n  const index = id => {\n    let res = -1;\n    noteState.notes.forEach((note, i) => {\n      if (note.id === id) {\n        res = id;\n      }\n\n      return res;\n    });\n    console.log(\"Index performed\");\n  };\n\n  const toggleList = () => {\n    setColVisible(!colVisible);\n  };\n\n  const addNote = () => {\n    setNoteState({ ...noteState,\n      notes: noteState.notes.concat({\n        id: noteState.newID,\n        text: \"\",\n        date: new Date()\n      }),\n      selectedID: noteState.newID,\n      newID: noteState.newID\n    });\n    setTextarea(\"\");\n    console.log(\"addNote performed\");\n  };\n\n  const editNote = () => {\n    const getNewNote = () => {\n      const result = noteState.notes.slice(0);\n      result[index(noteState.selectedID)].text = textarea;\n      return result;\n    };\n\n    setNoteState({ ...noteState,\n      notes: getNewNote()\n    });\n  };\n\n  const changeNote = e => {\n    setTextarea(e.target.value);\n  };\n\n  const deleteNote = () => {\n    if (noteState.selectedID < 0) {\n      return;\n    }\n\n    const nextPossibleNotes = noteState.notes.filter(note => note.id < noteState.seledtedID);\n    const tempID = // ((noteState.notes.length === 0) && (nextPossibleNotes.length === 0))?\n    noteState.notes.length === 0 ? null : nextPossibleNotes.length === 0 ? noteState.notes[1].id : nextPossibleNotes[nextPossibleNotes.length - 1].id;\n    console.log(\"deleteNote performed\");\n  };\n\n  const selectNote = id => {\n    setNoteState({ ...noteState,\n      selectedID: id\n    });\n    setTextarea(index(id) != -1 ? noteState.notes[index(id)].text : \"\");\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div className = \"all\">\n    _jsxDEV(\"div\", {\n      className: \"col\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: colVisible ? \"col1 col1.show\" : \"col1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col1_top\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"col1_image\",\n            id: \"image\",\n            alt: \"hyerin\",\n            src: require('./hyerin.jpg').default,\n            onClick: togglePopup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col1_title\",\n            children: \" My notes \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-icons col1_deleteBtn btn\",\n            id: \"delete\",\n            onClick: deleteNote,\n            children: noteState.selectedID === null ? \"delete_outline\" : \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col1_search\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-icons col1_searchBtn btn\",\n            id: \"search\",\n            children: \"search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"col1_inputSearch\",\n            type: \"text\",\n            placeholder: \"Search all notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col1_noteList\",\n          id: \"noteList\",\n          children: noteState.notes.slice(0).reverse().map(note => {\n            return /*#__PURE__*/_jsxDEV(Note, {\n              note: note,\n              selectedID: noteState.selectedID,\n              selectNote: selectNote,\n              toggleList: toggleList\n            }, note.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col2_top\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-icons col2_undoBtn\",\n            id: \"undo\",\n            onClick: toggleList,\n            children: \"arrow_back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-icons col2_addBtn\",\n            id: \"add\",\n            onClick: addNote,\n            children: \"note_add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col2_note\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: noteState.selectedID != null ? \"col2_text col2_note col2_note.selected\" : \"col1_text\",\n            id: \"text\",\n            value: textarea,\n            onChange: changeNote,\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            className: \"col2_markdown\",\n            id: \"markdown\",\n            children: textarea,\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this) // </div>\n\n  );\n};\n\n_s(Col, \"f5Y9uLazIWWeYErN/DJ4D2k7A5M=\");\n\n_c = Col;\nexport default Col;\n\nvar _c;\n\n$RefreshReg$(_c, \"Col\");","map":{"version":3,"sources":["/Users/zzaerynn/Desktop/CSE316/hw2-hyerinchoi/src/Col.js"],"names":["React","Component","useEffect","useState","ReactMarkdown","Note","getNewID","notes","res","note","id","Col","popup","togglePopup","colVisible","setColVisible","textarea","setTextarea","noteState","setNoteState","localStorage","getItem","selectedID","newID","JSON","parse","window","setItem","stringify","index","forEach","i","console","log","toggleList","addNote","concat","text","date","Date","editNote","getNewNote","result","slice","changeNote","e","target","value","deleteNote","nextPossibleNotes","filter","seledtedID","tempID","length","selectNote","require","default","reverse","map"],"mappings":"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","sourcesContent":["import {React, Component, useEffect, useState} from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Note from './Note';\n\n const getNewID = (notes) =>{\n     let res = -1;\n     for (let note in notes){\n         if (notes[note].id > res){\n             res = notes[note.id];\n         }\n     }\n     return res === -1 ? 0 : res + 1;\n }\n\n const Col = ({ popup, togglePopup }) => {\n    const [colVisible, setColVisible] = useState(true);\n\n    const [textarea, setTextarea] = useState(\"\");\n\n    const [noteState, setNoteState] = useState( localStorage.getItem(\"noteData\") === null \n         ? { notes: [] , selectedID : null, newID : 0} \n         : { notes : JSON.parse(window.localStorage.getItem(\"noteData\")),\n            selectedID : null, \n            newID : getNewID(JSON.parse(window.localStorage.getItem(\"noteData\")))\n         }\n        )\n    useEffect(() => {\n        window.localStorage.setItem(\"noteData\", JSON.stringify(noteState.notes));\n    })\n\n    const index = (id ) =>{\n        let res = -1;\n        noteState.notes.forEach((note,i) => {\n            if (note.id === id){\n                res = id\n            }\n            return res;\n        })\n        console.log(\"Index performed\");\n    }\n    \n    const toggleList = () => {\n        setColVisible(!colVisible);\n    }\n\n    const addNote = () => {\n        setNoteState({\n            ...noteState,\n            notes : noteState.notes.concat({id : noteState.newID, text : \"\", date : new Date()}),\n            selectedID : noteState.newID,\n            newID : noteState.newID\n        })\n        setTextarea(\"\");\n        console.log(\"addNote performed\");\n    }\n    \n    \n    const editNote = () => {\n        const getNewNote = () => {\n            const result = noteState.notes.slice(0);\n            result [index(noteState.selectedID)].text = textarea;\n            return result;\n        }\n        setNoteState({\n            ...noteState,\n            notes:getNewNote(),\n        })\n    }\n    \n    const changeNote = (e) =>{\n        setTextarea(e.target.value)\n    }\n    \n    const deleteNote = () => {\n        if (noteState.selectedID < 0){\n            return;\n        }\n        const nextPossibleNotes = noteState.notes.filter( (note) => note.id < noteState.seledtedID );\n\n        const tempID = \n            // ((noteState.notes.length === 0) && (nextPossibleNotes.length === 0))?\n            (noteState.notes.length === 0) ? null \n            : (nextPossibleNotes.length === 0 ) ? noteState.notes[1].id : nextPossibleNotes[nextPossibleNotes.length -1].id; \n            console.log(\"deleteNote performed\");\n    }\n    \n    const selectNote = (id) => {\n        setNoteState({\n            ...noteState,\n            selectedID : id,\n        })\n        setTextarea(index(id) != -1 ? noteState.notes[index(id)].text : \"\")\n    }\n    \n return (\n    // <div className = \"all\">\n    <div className = \"col\">\n        <div className = {colVisible ? \"col1 col1.show\" : \"col1\"}>\n            <div className = \"col1_top\">\n                <img className = \"col1_image\" id =\"image\" alt = 'hyerin' src={require('./hyerin.jpg').default} onClick ={togglePopup}/> \n                <div className = \"col1_title\"> My notes </div>\n                <span className=\"material-icons col1_deleteBtn btn\" id = \"delete\" onClick = {deleteNote}>\n                    {( noteState.selectedID === null) ? \"delete_outline\" : \"delete\" }\n                </span>\n            </div>\n            <div className = \"col1_search\">\n                <span className=\"material-icons col1_searchBtn btn\" id=\"search\">search</span>\n                <input className=\"col1_inputSearch\" type=\"text\" placeholder=\"Search all notes\"/>\n            </div>\n            <div className=\"col1_noteList\" id=\"noteList\" >\n                {noteState.notes.slice(0).reverse().map((note) => {\n                    return (\n                        <Note key = {note.id} note = {note} selectedID = {noteState.selectedID} selectNote = {selectNote} toggleList = {toggleList} />\n                    )\n                })}\n            </div>\n        </div>\n        <div className = \"col2\">\n            <div className = \"col2_top\">\n                <span className=\"material-icons col2_undoBtn\" id = \"undo\" onClick = {toggleList}>arrow_back</span>\n                <span className=\"material-icons col2_addBtn\" id=\"add\" onClick = {addNote}>note_add</span>\n            </div>\n            <div className = 'col2_note'>\n                <textarea className={(noteState.selectedID != null ) ? \"col2_text col2_note col2_note.selected\": \"col1_text\" } id = \"text\"\n                value = {textarea} onChange= {changeNote}> </textarea>\n                <ReactMarkdown className = \"col2_markdown\" id = \"markdown\" children = {textarea}> </ReactMarkdown>\n            </div>  \n        </div>  \n      </div>\n    // </div>\n    )\n} \n\nexport default Col;"]},"metadata":{},"sourceType":"module"}