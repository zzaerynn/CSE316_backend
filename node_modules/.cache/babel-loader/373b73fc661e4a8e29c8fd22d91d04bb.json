{"ast":null,"code":"var _jsxFileName = \"/Users/zzaerynn/Desktop/CSE316/hw2-hyerinchoi/src/Col.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Note from './Note';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Col = ({\n  popup,\n  togglePopup\n}) => {\n  _s();\n\n  const [colVisible, setColVisible] = useState(true);\n  const [textarea, setTextarea] = useState(\"\");\n\n  const getNewID = notes => {\n    // console.log(\"note:\",notes);\n    let res = -1;\n\n    for (let note in notes) {\n      // console.log(\"noteeach:\", note);\n      if (notes[note].id > res) {\n        res = notes[note].id;\n      }\n    }\n\n    return res === -1 ? 0 : res + 1;\n  };\n\n  const [noteState, setNoteState] = useState(localStorage.getItem(\"noteData\") === null ? {\n    notes: [],\n    selectedID: null,\n    newID: 0\n  } : {\n    notes: JSON.parse(window.localStorage.getItem(\"noteData\")),\n    selectedID: null,\n    newID: getNewID(JSON.parse(window.localStorage.getItem(\"noteData\")))\n  });\n  useEffect(() => {\n    window.localStorage.setItem(\"noteData\", JSON.stringify(noteState.notes));\n  }, [noteState]);\n\n  const index = id => {\n    let res = -1;\n    noteState.notes.forEach((note, i) => {\n      if (note.id === id) {\n        res = i;\n      }\n\n      return res;\n    });\n    console.log(\"index: \", res);\n    return res;\n  };\n\n  const toggleCol1 = () => {\n    setColVisible(!colVisible);\n  };\n\n  const addNote = () => {\n    setNoteState({ ...noteState,\n      notes: noteState.notes.concat({\n        id: noteState.newID,\n        text: \"\",\n        date: new Date()\n      }),\n      selectedID: noteState.newID,\n      newID: noteState.newID + 1\n    });\n    setTextarea(\"\");\n    console.log(\"addNote performed\");\n  };\n\n  const editNote = () => {\n    const getNewNote = () => {\n      const res = noteState.notes.slice(0);\n      res[index(noteState.selectedID)].text = textarea;\n      return res;\n    };\n\n    setNoteState({ ...noteState,\n      notes: getNewNote()\n    });\n  };\n\n  const changeNote = e => {\n    setTextarea(e.target.value);\n  };\n\n  const deleteNote = () => {\n    if (noteState.selectedID < 0) {\n      return;\n    }\n\n    const nextPossibleNotes = noteState.notes.filter(note => note.id < noteState.seledtedID);\n    const tempID = noteState.notes.length <= 1 ? null : nextPossibleNotes.length === 0 ? noteState.notes[1].id : nextPossibleNotes[nextPossibleNotes.length - 1].id;\n    setTextarea(index(tempID) !== -1 ? noteState.notes[index(tempID)] : \"\");\n    setNoteState({ ...noteState,\n      notes: noteState.notes.filter(note => note.id !== noteState.selectedID)\n    }); // console.log(\"deleteNote performed\");\n  };\n\n  const selectNote = id => {\n    setNoteState({ ...noteState,\n      selectedID: id\n    });\n    setTextarea(index(id) !== -1 ? noteState.notes[index(id)].text : \"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: colVisible ? \"col1 col1.show\" : \"col1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col1_top\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"col1_image\",\n          id: \"image\",\n          alt: \"hyerin\",\n          src: require('./hyerin.jpg').default,\n          onClick: togglePopup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col1_title\",\n          children: \" My notes \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-icons col1_deleteBtn btn\",\n          id: \"delete\",\n          onClick: deleteNote,\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col1_search\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-icons col1_searchBtn btn\",\n          id: \"search\",\n          children: \"search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"col1_inputSearch\",\n          type: \"text\",\n          placeholder: \"Search all notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col1_noteList\",\n        id: \"noteList\",\n        children: noteState.notes.slice(0).reverse().map(note => {\n          return /*#__PURE__*/_jsxDEV(Note, {\n            note: note,\n            selectedID: noteState.selectedID,\n            selectNote: selectNote,\n            toggleCol1: toggleCol1\n          }, note.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col2_top\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-icons col2_undoBtn\",\n          id: \"undo\",\n          onClick: toggleCol1,\n          children: \"arrow_back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-icons col2_addBtn\",\n          id: \"add\",\n          onClick: addNote,\n          children: \"note_add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col2_note\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: noteState.selectedID !== null ? \"col2_text col2_text.selected\" : \"col1_text\",\n          id: \"text\",\n          value: textarea,\n          onChange: changeNote,\n          onBlur: editNote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          className: \"col2_markdown\",\n          id: \"markdown\",\n          children: textarea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Col, \"f5Y9uLazIWWeYErN/DJ4D2k7A5M=\");\n\n_c = Col;\nexport default Col;\n\nvar _c;\n\n$RefreshReg$(_c, \"Col\");","map":{"version":3,"sources":["/Users/zzaerynn/Desktop/CSE316/hw2-hyerinchoi/src/Col.js"],"names":["React","useEffect","useState","ReactMarkdown","Note","Col","popup","togglePopup","colVisible","setColVisible","textarea","setTextarea","getNewID","notes","res","note","id","noteState","setNoteState","localStorage","getItem","selectedID","newID","JSON","parse","window","setItem","stringify","index","forEach","i","console","log","toggleCol1","addNote","concat","text","date","Date","editNote","getNewNote","slice","changeNote","e","target","value","deleteNote","nextPossibleNotes","filter","seledtedID","tempID","length","selectNote","require","default","reverse","map"],"mappings":"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","sourcesContent":["import React,{ useEffect, useState} from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Note from './Note';\n\n \n\n const Col = ({ popup, togglePopup }) => {\n\n    const [colVisible, setColVisible] = useState(true);\n\n    const [textarea, setTextarea] = useState(\"\");\n\n    const getNewID = (notes) =>{\n        // console.log(\"note:\",notes);\n        let res = -1;\n        for (let note in notes){\n            // console.log(\"noteeach:\", note);\n            if (notes[note].id > res){\n                res = notes[note].id;\n            }\n        }\n        return res === -1 ? 0 : res + 1;\n    }\n\n    const [noteState, setNoteState] = useState( localStorage.getItem(\"noteData\") === null \n         ? { notes: [] , selectedID : null, newID : 0} \n         : { notes : JSON.parse(window.localStorage.getItem(\"noteData\")),\n            selectedID : null, \n            newID : getNewID(JSON.parse(window.localStorage.getItem(\"noteData\")))\n         }\n        )\n    useEffect(() => { window.localStorage.setItem(\"noteData\", JSON.stringify(noteState.notes)); }, [noteState]);\n\n    const index = (id ) =>{\n        let res = -1;\n        noteState.notes.forEach((note,i) => {\n            if (note.id === id){\n                res = i\n            }\n            return res;\n        })\n        console.log(\"index: \",res);\n        return res;\n    }\n    \n    const toggleCol1= () => {\n        setColVisible(!colVisible);\n    }\n\n    const addNote = () => {\n        setNoteState({...noteState,\n            notes : noteState.notes.concat({id : noteState.newID, text : \"\", date : new Date()}),\n            selectedID : noteState.newID,\n            newID : noteState.newID + 1,\n        })\n        setTextarea(\"\");\n        console.log(\"addNote performed\");\n    }\n    \n    \n    const editNote = () => {\n        const getNewNote = () => {\n            const res = noteState.notes.slice(0);\n            res[index(noteState.selectedID)].text = textarea;\n            return res;\n        }\n        setNoteState({\n            ...noteState,\n            notes:getNewNote(),\n        })\n    }\n    \n    const changeNote = (e) =>{\n        setTextarea(e.target.value)\n    }\n    \n    const deleteNote = () => {\n        if (noteState.selectedID < 0){\n            return;\n        }\n        const nextPossibleNotes = noteState.notes.filter( (note) => note.id < noteState.seledtedID );\n\n        const tempID = \n            (noteState.notes.length <= 1) ? null \n            : (nextPossibleNotes.length === 0 ) ? noteState.notes[1].id : nextPossibleNotes[nextPossibleNotes.length -1].id; \n        \n        setTextarea ( (index(tempID) !== -1) ? noteState.notes[index(tempID)]: \"\")\n        setNoteState ({ ...noteState, notes : noteState.notes.filter((note) => note.id !== noteState.selectedID )})\n        // console.log(\"deleteNote performed\");\n    }\n\n    const selectNote = (id) => { \n        setNoteState({...noteState, selectedID : id})\n        setTextarea( (index(id) !== -1) ? noteState.notes[index(id)].text : \"\");\n    }\n    \n return (\n    <div className = \"col\">\n        <div className = {colVisible ? \"col1 col1.show\" : \"col1\"}>\n            <div className = \"col1_top\">\n                <img className = \"col1_image\" id =\"image\" alt = 'hyerin' src={require('./hyerin.jpg').default} onClick ={togglePopup}/> \n                <div className = \"col1_title\"> My notes </div>\n                <span className=\"material-icons col1_deleteBtn btn\" id = \"delete\" onClick = {deleteNote}>\n                    delete\n                </span>\n            </div>\n            <div className = \"col1_search\">\n                <span className=\"material-icons col1_searchBtn btn\" id=\"search\">search</span>\n                <input className=\"col1_inputSearch\" type=\"text\" placeholder=\"Search all notes\"/>\n            </div>\n            <div className=\"col1_noteList\" id=\"noteList\" >\n                {noteState.notes.slice(0).reverse().map((note) => {\n                    return (\n                        <Note key = {note.id} note = {note} selectedID = {noteState.selectedID} selectNote = {selectNote} toggleCol1 = {toggleCol1} />\n                    )\n                })}\n            </div>\n        </div>\n        <div className = \"col2\">\n            <div className = \"col2_top\">\n                <span className=\"material-icons col2_undoBtn\" id = \"undo\" onClick = {toggleCol1}>arrow_back</span>\n                <span className=\"material-icons col2_addBtn\" id=\"add\" onClick = {addNote}>note_add</span>\n            </div>\n            <div className = 'col2_note'>\n                <textarea className={(noteState.selectedID !== null ) ? \"col2_text col2_text.selected\" : \"col1_text\" } id = \"text\"\n                         value = {textarea} onChange= {changeNote} onBlur = {editNote}/>\n                <ReactMarkdown className = \"col2_markdown\" id = \"markdown\" children = {textarea}/>\n            </div>  \n        </div>  \n      </div>\n    )\n} \n\nexport default Col;"]},"metadata":{},"sourceType":"module"}