{"ast":null,"code":"var _jsxFileName = \"/Users/zzaerynn/Desktop/CSE316/hw2-hyerinchoi/src/Note.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Note = ({\n  note,\n  selectedID,\n  toggleCol1,\n  selectNote\n}) => {\n  _s();\n\n  const formatDate = date => {\n    date = new Date();\n    const year = date.getFullYear();\n    const month = date.getMonth() + 1;\n    const day = date.getDate();\n    return `${month}/${day}/${year}`; // console.log(\"formatDate performed\");\n  };\n\n  const formatTitle = text => {\n    const firstLine = text.split(\"\\n\")[0];\n\n    if (firstLine === \"\") {\n      return \"New note\";\n    }\n\n    return firstLine;\n  };\n\n  const [noteOpen, setNoteOpen] = useState(false); // 뒤로가기 하면 true\n  // noteList click False\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: selectedID === note.id ? \"col1_note col1_note.selected\" : \"col1_note\",\n    index: note.id,\n    onClick: () => {\n      selectNote(note.id);\n      /*toggleCol1();}*/\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col1_text\",\n      children: [\" \", formatTitle(note.text)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col1_date\",\n      id: \"col1_date\",\n      children: [\" \", formatDate(note.date), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Note, \"MTtRyl71e3dOn5u9zjbbEJ8fi2Q=\");\n\n_c = Note;\nexport default Note;\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"sources":["/Users/zzaerynn/Desktop/CSE316/hw2-hyerinchoi/src/Note.js"],"names":["React","useState","Note","note","selectedID","toggleCol1","selectNote","formatDate","date","Date","year","getFullYear","month","getMonth","day","getDate","formatTitle","text","firstLine","split","noteOpen","setNoteOpen","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,UAAP;AAAmBC,EAAAA,UAAnB;AAA+BC,EAAAA;AAA/B,CAAD,KAAgD;AAAA;;AACzD,QAAMC,UAAU,GAAIC,IAAD,IAAS;AACxBA,IAAAA,IAAI,GAAG,IAAIC,IAAJ,EAAP;AACA,UAAMC,IAAI,GAAGF,IAAI,CAACG,WAAL,EAAb;AACA,UAAMC,KAAK,GAAGJ,IAAI,CAACK,QAAL,KAAiB,CAA/B;AACA,UAAMC,GAAG,GAAGN,IAAI,CAACO,OAAL,EAAZ;AACA,WAAQ,GAAEH,KAAM,IAAGE,GAAI,IAAGJ,IAAK,EAA/B,CALwB,CAMxB;AACH,GAPD;;AASA,QAAMM,WAAW,GAAIC,IAAD,IAAU;AAC1B,UAAMC,SAAS,GAAGD,IAAI,CAACE,KAAL,CAAW,IAAX,EAAiB,CAAjB,CAAlB;;AACA,QAAID,SAAS,KAAK,EAAlB,EAAqB;AACjB,aAAO,UAAP;AACH;;AACD,WAAOA,SAAP;AACH,GAND;;AAOA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,KAAD,CAAxC,CAjByD,CAkBzD;AACA;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAGG,UAAU,KAAKD,IAAI,CAACmB,EAArB,GAA2B,8BAA3B,GAA4D,WAA5E;AACI,IAAA,KAAK,EAAInB,IAAI,CAACmB,EADlB;AACsB,IAAA,OAAO,EAAK,MAAM;AAAChB,MAAAA,UAAU,CAACH,IAAI,CAACmB,EAAN,CAAV;AAAqB;AAAmB,KADjF;AAAA,4BAGI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,sBAA6BN,WAAW,CAACb,IAAI,CAACc,IAAN,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKI;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,EAAE,EAAC,WAA9B;AAAA,sBAA6CV,UAAU,CAACJ,IAAI,CAACK,IAAN,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAjCD;;GAAMN,I;;KAAAA,I;AAmCN,eAAeA,IAAf","sourcesContent":["import React, {useState} from 'react'\n\nconst Note = ({note, selectedID, toggleCol1, selectNote}) => {\n    const formatDate = (date)=> {\n        date = new Date();\n        const year = date.getFullYear();\n        const month = date.getMonth()+ 1;\n        const day = date.getDate();\n        return `${month}/${day}/${year}`;\n        // console.log(\"formatDate performed\");\n    }\n    \n    const formatTitle = (text) => {\n        const firstLine = text.split(\"\\n\")[0];\n        if (firstLine === \"\"){\n            return \"New note\";\n        }\n        return firstLine;\n    }\n    const [noteOpen, setNoteOpen] = useState(false);\n    // 뒤로가기 하면 true\n    // noteList click False\n\n\n\n    return(\n        <div className={(selectedID === note.id )? \"col1_note col1_note.selected\" : \"col1_note\"} \n            index = {note.id} onClick = { () => {selectNote(note.id); /*toggleCol1();}*/}} >\n                {/* index = {note.id} onClick =  {()=>selectNote(note.id)}> */}\n            <div className=\"col1_text\"> {formatTitle(note.text)}</div>\n            {/* <div className=\"col1_textNote\" id=\"col1_textNote\" > {note.text}</div> */}\n            <div className=\"col1_date\" id=\"col1_date\" > {formatDate(note.date)} </div>\n        </div>\n    ) \n\n}\n\nexport default Note;  "]},"metadata":{},"sourceType":"module"}