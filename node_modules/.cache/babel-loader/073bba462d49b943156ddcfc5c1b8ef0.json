{"ast":null,"code":"var _jsxFileName = \"/Users/zzaerynn/Desktop/CSE316/hw2-hyerinchoi/src/Col.js\";\nimport { React, Component, useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Note from './Note';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Col = ({\n  popup,\n  togglePopup\n}) => {\n  var _s = $RefreshSig$();\n\n  const getNewID = notes => {\n    let res = -1;\n\n    for (let note in notes) {\n      if (notes[note].id > res) {\n        res = notes[note.id];\n      }\n    }\n\n    return res === -1 ? 0 : res + 1;\n  };\n\n  const index = id => {\n    let res = -1;\n    noteState.notes.forEach((note, i) => {\n      if (note.id === id) {\n        res = id;\n      }\n\n      return res;\n    });\n    console.log(\"Index performed\");\n  };\n\n  const toggleList = () => {\n    setIsVisible(!isVisible);\n  }; // const Note = ({note, selectedID, selectNote, toggleList}) => {\n  //     const formatTitle = (text) =>{\n  //         const showLine = text.split (\"\\n\")[0];\n  //         if(showLine === \"\"){\n  //             return \"new note\";\n  //         }\n  //         return showLine\n  //     }\n  //     console.log(\"Note performed\");\n  // }\n\n\n  const addNote = () => {\n    setNoteState({ ...noteState,\n      notes: noteState.notes.concat({\n        id: noteState.newID,\n        text: \"\",\n        date: new Date()\n      }),\n      selectedID: noteState.newID,\n      newID: noteState.newID\n    });\n    setTextarea(\"\");\n    console.log(\"addNote performed\");\n  };\n\n  const editNote = () => {\n    const getNewNote = () => {\n      const result = noteState.notes.slice(0);\n      result[index(noteState.selectedID)].text = textarea;\n      return result;\n    };\n\n    setNoteState({ ...noteState,\n      notes: getNewNote()\n    });\n  };\n\n  const changeNote = e => {\n    setTextarea(e.target.value);\n  };\n\n  const deleteNote = () => {\n    if (noteState.selectedID < 0) {\n      return;\n    }\n\n    const nextNote = noteState.notes.filter(note => note.id < noteState.seledtedID);\n    const tempID = // ((noteState.notes.length === 0) && (nextPossibleNotes.length === 0))?\n    noteState.notes.length === 0 ? null : nextPossibleNotes.length === 0 ? noteState.notes[1].id : nextPossibleNotes[nextPossibleNotes.length - 1].id;\n    console.log(\"deleteNote performed\");\n  };\n\n  const selectNote = id => {\n    setNoteState({ ...noteState,\n      selectedID: id\n    });\n    setTextarea(index(id) != -1 ? noteState.notes[index(id)].text : \"\");\n  };\n\n  const Col = ({\n    popup,\n    togglePopup\n  }) => {\n    _s();\n\n    const [isVisible, setIsVisible] = useState(true);\n    const [textarea, setTextarea] = useState(\"\");\n    const [noteState, setNotestate] = useState(localStorage.getitem(\"noteData\") === null ? {\n      notes: [],\n      selectedID: null,\n      newID: 0\n    } : {\n      notes: JSON.parse(window.localStorage.getItem(\"noteData\")),\n      selectedID: null,\n      newID: getNewID(JSON.parse(window.localStorage.getItem(\"noteData\")))\n    });\n    useEffect(() => {\n      window.localStorage.setItem(\"noteData\", JSON.stringify(noteState.notes));\n    });\n  };\n\n  _s(Col, \"tf57H/by06MQGp29q7qFeU1or8I=\");\n\n  return (\n    /*#__PURE__*/\n    // <div className = \"all\">\n    _jsxDEV(\"div\", {\n      className: \"col\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col1_top\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"col1_image\",\n            id: \"image\",\n            alt: \"hyerin\",\n            src: require('./hyerin.jpg').default\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col1_title\",\n            children: \" My notes \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-icons col1_deleteBtn btn\",\n            id: \"delete\",\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col1_search\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-icons col1_searchBtn btn\",\n            id: \"search\",\n            children: \"search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"col1_inputSearch\",\n            type: \"text\",\n            placeholder: \"Search all notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col1_noteList\",\n          id: \"noteList\",\n          children: noteState.notes.slice(0).reverse().map(note => {\n            return /*#__PURE__*/_jsxDEV(Note, {\n              note: note,\n              selectedID: noteState.selectedID,\n              selectNote: selectNote,\n              toggleList: toggleList\n            }, note.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col2_top\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-icons col2_undoBtn\",\n            id: \"undo\",\n            onClick: toggleList,\n            children: \"arrow_back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-icons col2_addBtn\",\n            id: \"add\",\n            onClick: addNote,\n            children: \"note_add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col2_note\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"col2_text\",\n            id: \"text\",\n            value: textarea,\n            onChange: changeNote,\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            className: \"col2_markdown\",\n            id: \"markdown\",\n            children: textarea,\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }, this) // </div>\n\n  );\n};\n\n_c = Col;\nexport default Col;\n\nvar _c;\n\n$RefreshReg$(_c, \"Col\");","map":{"version":3,"sources":["/Users/zzaerynn/Desktop/CSE316/hw2-hyerinchoi/src/Col.js"],"names":["React","Component","useEffect","useState","ReactMarkdown","Note","Col","popup","togglePopup","getNewID","notes","res","note","id","index","noteState","forEach","i","console","log","toggleList","setIsVisible","isVisible","addNote","setNoteState","concat","newID","text","date","Date","selectedID","setTextarea","editNote","getNewNote","result","slice","textarea","changeNote","e","target","value","deleteNote","nextNote","filter","seledtedID","tempID","length","nextPossibleNotes","selectNote","setNotestate","localStorage","getitem","JSON","parse","window","getItem","setItem","stringify","require","default","reverse","map"],"mappings":"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","sourcesContent":["import {React, Component, useEffect, useState} from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Note from './Note';\n\nconst Col = ({popup, togglePopup }) =>{\n const getNewID = (notes) =>{\n     let res = -1;\n     for (let note in notes){\n         if (notes[note].id > res){\n             res = notes[note.id];\n         }\n     }\n     return res === -1 ? 0 : res + 1;\n }\n\n const index = (id ) =>{\n    let res = -1;\n    noteState.notes.forEach((note,i) => {\n        if (note.id === id){\n            res = id\n        }\n        return res;\n    })\n    console.log(\"Index performed\");\n}\n\nconst toggleList = () => {\n    setIsVisible(!isVisible);\n}\n\n// const Note = ({note, selectedID, selectNote, toggleList}) => {\n//     const formatTitle = (text) =>{\n//         const showLine = text.split (\"\\n\")[0];\n//         if(showLine === \"\"){\n//             return \"new note\";\n//         }\n//         return showLine\n//     }\n//     console.log(\"Note performed\");\n// }\n\nconst addNote = () => {\n    setNoteState({\n        ...noteState,\n        notes : noteState.notes.concat({\n            id : noteState.newID,\n            text : \"\",\n            date : new Date(),\n        }),\n        selectedID : noteState.newID,\n        newID : noteState.newID\n    })\n    setTextarea(\"\");\n    console.log(\"addNote performed\");\n}\n\n\nconst editNote = () => {\n    const getNewNote = () => {\n        const result = noteState.notes.slice(0);\n        result [index(noteState.selectedID)].text = textarea;\n        return result;\n    }\n    setNoteState({\n        ...noteState,\n        notes:getNewNote(),\n    })\n}\n\nconst changeNote = (e) =>{\n    setTextarea(e.target.value)\n}\n\nconst deleteNote = () => {\n    if (noteState.selectedID < 0){\n        return;\n    }\n    const nextNote = noteState.notes.filter(\n        (note) => note.id < noteState.seledtedID\n    );\n    const tempID = \n        // ((noteState.notes.length === 0) && (nextPossibleNotes.length === 0))?\n        (noteState.notes.length === 0) ? null \n        : (nextPossibleNotes.length === 0 ) ? noteState.notes[1].id : nextPossibleNotes[nextPossibleNotes.length -1].id; \n        console.log(\"deleteNote performed\");\n}\n\nconst selectNote = (id) => {\n    setNoteState({\n        ...noteState,\n        selectedID : id,\n    })\n    setTextarea(index(id) != -1 ? noteState.notes[index(id)].text : \"\")\n}\n\n const Col = ({ popup, togglePopup }) => {\n    const [isVisible, setIsVisible] = useState(true);\n    const [textarea, setTextarea] = useState(\"\");\n     const [noteState, setNotestate] = useState( localStorage.getitem(\"noteData\") === null \n         ? { notes: [] , selectedID : null, newID : 0} \n         : { notes : JSON.parse(window.localStorage.getItem(\"noteData\")),\n            selectedID : null, \n            newID : getNewID(JSON.parse(window.localStorage.getItem(\"noteData\")))\n         }\n        )\n    useEffect(() => {\n        window.localStorage.setItem(\"noteData\", JSON.stringify(noteState.notes));\n    })\n }; \n\n return (\n    // <div className = \"all\">\n    <div className = \"col\">\n        <div className = \"col1\">\n            <div className = \"col1_top\">\n                <img className = \"col1_image\" id =\"image\" alt = 'hyerin' src={require('./hyerin.jpg').default}/> \n                <div className = \"col1_title\"> My notes </div>\n                <span className=\"material-icons col1_deleteBtn btn\" id = \"delete\">delete</span>\n            </div>\n            <div className = \"col1_search\">\n                <span className=\"material-icons col1_searchBtn btn\" id=\"search\">search</span>\n                <input className=\"col1_inputSearch\" type=\"text\" placeholder=\"Search all notes\"/>\n            </div>\n            <div className=\"col1_noteList\" id=\"noteList\" >\n                {noteState.notes.slice(0).reverse().map((note) => {\n                    return (\n                        <Note key = {note.id} note = {note} selectedID = {noteState.selectedID} selectNote = {selectNote} toggleList = {toggleList} />\n                    )\n                })}\n            </div>\n        </div>\n        <div className = \"col2\">\n            <div className = \"col2_top\">\n                <span className=\"material-icons col2_undoBtn\" id = \"undo\" onClick = {toggleList}>arrow_back</span>\n                <span className=\"material-icons col2_addBtn\" id=\"add\" onClick = {addNote}>note_add</span>\n            </div>\n            <div className = 'col2_note'>\n                <textarea className=\"col2_text\" id = \"text\"\n                value = {textarea} onChange= {changeNote}> </textarea>\n                <ReactMarkdown className = \"col2_markdown\" id = \"markdown\" children = {textarea}> </ReactMarkdown>\n            </div>  \n        </div>  \n      </div>\n    // </div>\n    )\n\n}\nexport default Col;"]},"metadata":{},"sourceType":"module"}